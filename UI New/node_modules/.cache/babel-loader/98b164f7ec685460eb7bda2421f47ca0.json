{"ast":null,"code":"import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport AgoraRTC__default from 'agora-rtc-sdk-ng';\nexport * from 'agora-rtc-sdk-ng';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar AgoraRTCErrorCode;\n(function (AgoraRTCErrorCode) {\n  AgoraRTCErrorCode[\"UNEXPECTED_ERROR\"] = \"UNEXPECTED_ERROR\";\n  AgoraRTCErrorCode[\"UNEXPECTED_RESPONSE\"] = \"UNEXPECTED_RESPONSE\";\n  AgoraRTCErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  AgoraRTCErrorCode[\"INVALID_PARAMS\"] = \"INVALID_PARAMS\";\n  AgoraRTCErrorCode[\"NOT_SUPPORTED\"] = \"NOT_SUPPORTED\";\n  AgoraRTCErrorCode[\"INVALID_OPERATION\"] = \"INVALID_OPERATION\";\n  AgoraRTCErrorCode[\"OPERATION_ABORTED\"] = \"OPERATION_ABORTED\";\n  AgoraRTCErrorCode[\"WEB_SECURITY_RESTRICT\"] = \"WEB_SECURITY_RESTRICT\";\n  AgoraRTCErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  AgoraRTCErrorCode[\"NETWORK_TIMEOUT\"] = \"NETWORK_TIMEOUT\";\n  AgoraRTCErrorCode[\"NETWORK_RESPONSE_ERROR\"] = \"NETWORK_RESPONSE_ERROR\";\n  AgoraRTCErrorCode[\"API_INVOKE_TIMEOUT\"] = \"API_INVOKE_TIMEOUT\";\n  AgoraRTCErrorCode[\"ENUMERATE_DEVICES_FAILED\"] = \"ENUMERATE_DEVICES_FAILED\";\n  AgoraRTCErrorCode[\"DEVICE_NOT_FOUND\"] = \"DEVICE_NOT_FOUND\";\n  AgoraRTCErrorCode[\"ELECTRON_IS_NULL\"] = \"ELECTRON_IS_NULL\";\n  AgoraRTCErrorCode[\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\"] = \"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\";\n  AgoraRTCErrorCode[\"CHROME_PLUGIN_NO_RESPONSE\"] = \"CHROME_PLUGIN_NO_RESPONSE\";\n  AgoraRTCErrorCode[\"CHROME_PLUGIN_NOT_INSTALL\"] = \"CHROME_PLUGIN_NOT_INSTALL\";\n  AgoraRTCErrorCode[\"MEDIA_OPTION_INVALID\"] = \"MEDIA_OPTION_INVALID\";\n  AgoraRTCErrorCode[\"PERMISSION_DENIED\"] = \"PERMISSION_DENIED\";\n  AgoraRTCErrorCode[\"CONSTRAINT_NOT_SATISFIED\"] = \"CONSTRAINT_NOT_SATISFIED\";\n  AgoraRTCErrorCode[\"TRACK_IS_DISABLED\"] = \"TRACK_IS_DISABLED\";\n  AgoraRTCErrorCode[\"SHARE_AUDIO_NOT_ALLOWED\"] = \"SHARE_AUDIO_NOT_ALLOWED\";\n  AgoraRTCErrorCode[\"LOW_STREAM_ENCODING_ERROR\"] = \"LOW_STREAM_ENCODING_ERROR\";\n  AgoraRTCErrorCode[\"INVALID_UINT_UID_FROM_STRING_UID\"] = \"INVALID_UINT_UID_FROM_STRING_UID\";\n  AgoraRTCErrorCode[\"CAN_NOT_GET_PROXY_SERVER\"] = \"CAN_NOT_GET_PROXY_SERVER\";\n  AgoraRTCErrorCode[\"CAN_NOT_GET_GATEWAY_SERVER\"] = \"CAN_NOT_GET_GATEWAY_SERVER\";\n  AgoraRTCErrorCode[\"VOID_GATEWAY_ADDRESS\"] = \"VOID_GATEWAY_ADDRESS\";\n  AgoraRTCErrorCode[\"UID_CONFLICT\"] = \"UID_CONFLICT\";\n  AgoraRTCErrorCode[\"INVALID_LOCAL_TRACK\"] = \"INVALID_LOCAL_TRACK\";\n  AgoraRTCErrorCode[\"INVALID_TRACK\"] = \"INVALID_TRACK\";\n  AgoraRTCErrorCode[\"SENDER_NOT_FOUND\"] = \"SENDER_NOT_FOUND\";\n  AgoraRTCErrorCode[\"CREATE_OFFER_FAILED\"] = \"CREATE_OFFER_FAILED\";\n  AgoraRTCErrorCode[\"SET_ANSWER_FAILED\"] = \"SET_ANSWER_FAILED\";\n  AgoraRTCErrorCode[\"ICE_FAILED\"] = \"ICE_FAILED\";\n  AgoraRTCErrorCode[\"PC_CLOSED\"] = \"PC_CLOSED\";\n  AgoraRTCErrorCode[\"SENDER_REPLACE_FAILED\"] = \"SENDER_REPLACE_FAILED\";\n  AgoraRTCErrorCode[\"GATEWAY_P2P_LOST\"] = \"GATEWAY_P2P_LOST\";\n  AgoraRTCErrorCode[\"NO_ICE_CANDIDATE\"] = \"NO_ICE_CANDIDATE\";\n  AgoraRTCErrorCode[\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\"] = \"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\";\n  AgoraRTCErrorCode[\"EXIST_DISABLED_VIDEO_TRACK\"] = \"EXIST_DISABLED_VIDEO_TRACK\";\n  AgoraRTCErrorCode[\"INVALID_REMOTE_USER\"] = \"INVALID_REMOTE_USER\";\n  AgoraRTCErrorCode[\"REMOTE_USER_IS_NOT_PUBLISHED\"] = \"REMOTE_USER_IS_NOT_PUBLISHED\";\n  AgoraRTCErrorCode[\"CUSTOM_REPORT_SEND_FAILED\"] = \"CUSTOM_REPORT_SEND_FAILED\";\n  AgoraRTCErrorCode[\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\"] = \"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\";\n  AgoraRTCErrorCode[\"FETCH_AUDIO_FILE_FAILED\"] = \"FETCH_AUDIO_FILE_FAILED\";\n  AgoraRTCErrorCode[\"READ_LOCAL_AUDIO_FILE_ERROR\"] = \"READ_LOCAL_AUDIO_FILE_ERROR\";\n  AgoraRTCErrorCode[\"DECODE_AUDIO_FILE_FAILED\"] = \"DECODE_AUDIO_FILE_FAILED\";\n  AgoraRTCErrorCode[\"WS_ABORT\"] = \"WS_ABORT\";\n  AgoraRTCErrorCode[\"WS_DISCONNECT\"] = \"WS_DISCONNECT\";\n  AgoraRTCErrorCode[\"WS_ERR\"] = \"WS_ERR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_TASK_CONFLICT\"] = \"LIVE_STREAMING_TASK_CONFLICT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INVALID_ARGUMENT\"] = \"LIVE_STREAMING_INVALID_ARGUMENT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\"] = \"LIVE_STREAMING_INTERNAL_SERVER_ERROR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\"] = \"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\"] = \"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_CDN_ERROR\"] = \"LIVE_STREAMING_CDN_ERROR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INVALID_RAW_STREAM\"] = \"LIVE_STREAMING_INVALID_RAW_STREAM\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\"] = \"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\"] = \"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\"] = \"LIVE_STREAMING_WARN_FREQUENT_REQUEST\";\n  AgoraRTCErrorCode[\"WEBGL_INTERNAL_ERROR\"] = \"WEBGL_INTERNAL_ERROR\";\n  AgoraRTCErrorCode[\"BEAUTY_PROCESSOR_INTERNAL_ERROR\"] = \"BEAUTY_PROCESSOR_INTERNAL_ERROR\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_WAIT_STATUS_ERROR\"] = \"CROSS_CHANNEL_WAIT_STATUS_ERROR\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_JOIN_SRC\"] = \"CROSS_CHANNEL_FAILED_JOIN_SEC\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_JOIN_DEST\"] = \"CROSS_CHANNEL_FAILED_JOIN_DEST\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\"] = \"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\"] = \"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\";\n  AgoraRTCErrorCode[\"METADATA_OUT_OF_RANGE\"] = \"METADATA_OUT_OF_RANGE\";\n})(AgoraRTCErrorCode || (AgoraRTCErrorCode = {}));\nvar createClient = function createClient(config) {\n  var client;\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC__default.createClient(config);\n    }\n    return client;\n  }\n  return function () {\n    return createClosure();\n  };\n};\nfunction createMicrophoneAndCameraTracks(audioConfig, videoConfig) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAndCameraTracks(audioConfig, videoConfig)).then(function (_AgoraRTC$createMicro) {\n        tracks = _AgoraRTC$createMicro;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var tracks = null;\n  return function useMicrophoneAndCameraTracks() {\n    var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n    var _useState2 = useState(null),\n      agoraRTCError = _useState2[0],\n      setAgoraRTCError = _useState2[1];\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        tracks = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createBufferSourceAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createBufferSourceAudioTrack(config)).then(function (_AgoraRTC$createBuffe) {\n        track = _AgoraRTC$createBuffe;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useBufferSourceAudioTrack() {\n    var _useState3 = useState(false),\n      ready = _useState3[0],\n      setReady = _useState3[1];\n    var _useState4 = useState(null),\n      agoraRTCError = _useState4[0],\n      setAgoraRTCError = _useState4[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCameraVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCameraVideoTrack(config)).then(function (_AgoraRTC$createCamer) {\n        track = _AgoraRTC$createCamer;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCameraVideoTrack() {\n    var _useState5 = useState(false),\n      ready = _useState5[0],\n      setReady = _useState5[1];\n    var _useState6 = useState(null),\n      agoraRTCError = _useState6[0],\n      setAgoraRTCError = _useState6[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCustomAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomAudioTrack(config)).then(function (_AgoraRTC$createCusto) {\n        track = _AgoraRTC$createCusto;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCustomAudioTrack() {\n    var _useState7 = useState(false),\n      ready = _useState7[0],\n      setReady = _useState7[1];\n    var _useState8 = useState(null),\n      agoraRTCError = _useState8[0],\n      setAgoraRTCError = _useState8[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createCustomVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomVideoTrack(config)).then(function (_AgoraRTC$createCusto2) {\n        track = _AgoraRTC$createCusto2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useCustomVideoTrack() {\n    var _useState9 = useState(false),\n      ready = _useState9[0],\n      setReady = _useState9[1];\n    var _useState10 = useState(null),\n      agoraRTCError = _useState10[0],\n      setAgoraRTCError = _useState10[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createMicrophoneAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAudioTrack(config)).then(function (_AgoraRTC$createMicro2) {\n        track = _AgoraRTC$createMicro2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var track = null;\n  return function useMicrophoneAudioTrack() {\n    var _useState11 = useState(false),\n      ready = _useState11[0],\n      setReady = _useState11[1];\n    var _useState12 = useState(null),\n      agoraRTCError = _useState12[0],\n      setAgoraRTCError = _useState12[1];\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nfunction createScreenVideoTrack(config, withAudio) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createScreenVideoTrack(config, withAudio)).then(function (_AgoraRTC$createScree) {\n        tracks = _AgoraRTC$createScree;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var tracks;\n  return function useScreenVideoTrack() {\n    var _useState13 = useState(false),\n      ready = _useState13[0],\n      setReady = _useState13[1];\n    var _useState14 = useState(null),\n      agoraRTCError = _useState14[0],\n      setAgoraRTCError = _useState14[1];\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === undefined) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\nvar AgoraVideoPlayer = function AgoraVideoPlayer(props) {\n  var vidDiv = useRef(null);\n  var videoTrack = props.videoTrack,\n    config = props.config,\n    other = _objectWithoutPropertiesLoose(props, [\"videoTrack\", \"config\"]);\n  useLayoutEffect(function () {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current, config);\n    return function () {\n      videoTrack.stop();\n    };\n  }, [videoTrack]);\n  return React.createElement(\"div\", Object.assign({}, other, {\n    ref: vidDiv\n  }));\n};\nexport default AgoraRTC__default;\nexport { AgoraRTCErrorCode, AgoraVideoPlayer, createBufferSourceAudioTrack, createCameraVideoTrack, createClient, createCustomAudioTrack, createCustomVideoTrack, createMicrophoneAndCameraTracks, createMicrophoneAudioTrack, createScreenVideoTrack };","map":null,"metadata":{},"sourceType":"module"}